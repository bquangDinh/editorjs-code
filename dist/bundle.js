!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.CodeTool=t():e.CodeTool=t()}(self,(()=>(()=>{"use strict";var e,t,n={7192:(e,t,n)=>{n.d(t,{Z:()=>i});var a=n(7537),l=n.n(a),o=n(3645),r=n.n(o)()(l());r.push([e.id,"@import url(https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.7.0/styles/default.min.css);"]),r.push([e.id,".editorjs-code-block{margin:10px 0 10px 0;box-sizing:border-box;width:100%;position:relative}.editorjs-code-block *{box-sizing:border-box}.editorjs-code-block .control-container{padding:10px;padding-bottom:0;display:flex;justify-content:space-between;background-color:#f3f3f3;border-radius:5px 5px 0 0}.editorjs-code-block .control-container .editorjs-code-language-select{position:relative}.editorjs-code-block .control-container .editorjs-code-language-select *{font-size:12px;font-family:Arial,Helvetica,sans-serif}.editorjs-code-block .control-container .editorjs-code-language-select select{display:none}.editorjs-code-block .control-container .editorjs-code-language-select .select-selected{background-color:rgba(0,0,0,0);padding:5px 20px 5px 10px;transition:background-color .2s;width:fit-content;border-radius:5px;cursor:pointer;position:relative}.editorjs-code-block .control-container .editorjs-code-language-select .select-selected:hover{background-color:rgba(0,0,0,.5)}.editorjs-code-block .control-container .editorjs-code-language-select .select-selected .arrow-icon{position:absolute;width:10px;height:10px;right:5px;top:6px;transition:transform .2s}.editorjs-code-block .control-container .editorjs-code-language-select .select-selected.select-arrow-active .arrow-icon{transform:rotateZ(180deg)}.editorjs-code-block .control-container .editorjs-code-language-select .select-items{padding:5px;height:auto;background-color:#292929;width:fit-content;border-radius:5px;margin-top:5px;position:absolute;z-index:5}.editorjs-code-block .control-container .editorjs-code-language-select .select-items .search-input{margin:5px;padding:5px;background-color:#5c5c5c;border:0;outline:0;border-radius:2px;color:#fff}.editorjs-code-block .control-container .editorjs-code-language-select .select-items .items-list{max-height:300px;overflow-y:auto}.editorjs-code-block .control-container .editorjs-code-language-select .select-items .items-list div{color:#fff;cursor:pointer;padding:5px 10px 5px 10px;margin:5px 0 5px 0;border-radius:5px;background-color:#292929;transition:background-color .2s}.editorjs-code-block .control-container .editorjs-code-language-select .select-items .items-list .same-as-selected,.editorjs-code-block .control-container .editorjs-code-language-select .select-items .items-list div:hover{background-color:#434343}.editorjs-code-block .control-container .editorjs-code-language-select .select-hide{display:none}.editorjs-code-block .control-container .language{font-size:12px;font-family:Arial,Helvetica,sans-serif;margin:5px}.editorjs-code-block .control-container .btn-div .control-btn{padding:5px 10px 5px 10px;border:1px solid #000;cursor:pointer;font-size:12px}.editorjs-code-block .control-container .btn-div .control-btn:hover{background-color:rgba(46,46,46,.2)}.editorjs-code-block .control-container .btn-div .copy-btn{border-radius:5px 0 0 5px}.editorjs-code-block .control-container .btn-div .copy-btn .copy-icon{width:10px;height:10px}.editorjs-code-block .control-container .btn-div .copy-btn.copy-btn-only{border-radius:5px}.editorjs-code-block .control-container .btn-div .caption-btn{border-radius:0 5px 5px 0;border-left:0}.editorjs-code-block .content-container{position:relative;background-color:#f3f3f3;border-radius:0 0 5px 5px}.editorjs-code-block .content-container .rendered-layer{position:absolute;z-index:0;top:0;left:0;right:0;bottom:0;border:0}.editorjs-code-block .content-container .rendered-layer pre{margin:0;white-space:pre-wrap;word-wrap:break-word}.editorjs-code-block .content-container .rendered-layer pre code{font-size:14px;padding:20px;padding-top:5px;border-radius:5px 5px 0 0;line-height:2}.editorjs-code-block .content-container .input-layer{position:relative;z-index:1;color:rgba(0,0,0,0);background:rgba(0,0,0,0);caret-color:#000;border:0;padding:20px;padding-top:5px;width:100%;resize:none;overflow:hidden;min-height:150px;outline:0}.editorjs-code-block .content-container .input-layer::selection{background-color:rgba(212,236,255,.5)}.editorjs-code-block .content-container .input-layer::-moz-selection{background-color:rgba(212,236,255,.5)}.editorjs-code-block .content-container .input-layer,.editorjs-code-block .content-container .rendered-layer,.editorjs-code-block .content-container .rendered-layer *{font-size:14px;font-family:monospace;tab-size:2;line-height:2}.editorjs-code-block .caption-input{border:0;outline:0;margin-top:5px;width:100%;color:gray;background-color:rgba(0,0,0,0)}","",{version:3,sources:["webpack://./src/style.scss"],names:[],mappings:"AAEA,qBACE,oBAAA,CACA,qBAAA,CAMA,UAAA,CACA,iBAAA,CALA,uBACE,qBAAA,CAMF,wCACE,YAAA,CACA,gBAAA,CACA,YAAA,CACA,6BAAA,CACA,wBAAA,CACA,yBAAA,CAEA,uEACE,iBAAA,CAEA,yEACE,cAAA,CACA,sCAAA,CAGF,8EACE,YAAA,CAGF,wFACE,8BAAA,CACA,yBAAA,CACA,+BAAA,CACA,iBAAA,CACA,iBAAA,CACA,cAAA,CACA,iBAAA,CAEA,8FACE,+BAAA,CAGF,oGACE,iBAAA,CACA,UAAA,CACA,WAAA,CACA,SAAA,CACA,OAAA,CACA,wBAAA,CAIA,wHACE,yBAAA,CAKN,qFACE,WAAA,CACA,WAAA,CACA,wBAAA,CACA,iBAAA,CACA,iBAAA,CACA,cAAA,CACA,iBAAA,CACA,SAAA,CAEA,mGACE,UAAA,CACA,WAAA,CACA,wBAAA,CACA,QAAA,CACA,SAAA,CACA,iBAAA,CACA,UAAA,CAGF,iGACE,gBAAA,CACA,eAAA,CAEA,qGACE,UAAA,CACA,cAAA,CACA,yBAAA,CACA,kBAAA,CACA,iBAAA,CACA,wBAAA,CACA,+BAAA,CAGF,8NAEE,wBAAA,CAKN,oFACE,YAAA,CAIJ,kDACE,cAAA,CACA,sCAAA,CACA,UAAA,CAIA,8DACE,yBAAA,CACA,qBAAA,CACA,cAAA,CACA,cAAA,CAEA,oEACE,kCAAA,CAIJ,2DACE,yBAAA,CAEA,sEACE,UAAA,CACA,WAAA,CAGF,yEACE,iBAAA,CAIJ,8DACE,yBAAA,CACA,aAAA,CAKN,wCACE,iBAAA,CACA,wBAAA,CACA,yBAAA,CAEA,wDACE,iBAAA,CACA,SAAA,CACA,KAAA,CACA,MAAA,CACA,OAAA,CACA,QAAA,CACA,QAAA,CAEA,4DACE,QAAA,CACA,oBAAA,CACA,oBAAA,CAEA,iEACE,cAAA,CACA,YAAA,CACA,eAAA,CACA,yBAAA,CACA,aAAA,CAKN,qDACE,iBAAA,CACA,SAAA,CAEA,mBAAA,CACA,wBAAA,CACA,gBAAA,CACA,QAAA,CAEA,YAAA,CACA,eAAA,CAEA,UAAA,CAEA,WAAA,CACA,eAAA,CACA,gBAAA,CAEA,SAAA,CAEA,gEACE,qCAAA,CAGF,qEACE,qCAAA,CAIJ,uKAGE,cAAA,CACA,qBAAA,CACA,UAAA,CACA,aAAA,CAIJ,oCACE,QAAA,CACA,SAAA,CACA,cAAA,CACA,UAAA,CACA,UAAA,CACA,8BAAA",sourcesContent:["@import url('https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.7.0/styles/default.min.css');\n\n.editorjs-code-block {\n  margin: 10px 0 10px 0;\n  box-sizing: border-box;\n\n  * {\n    box-sizing: border-box;\n  }\n\n  width: 100%;\n  position: relative;\n\n  .control-container {\n    padding: 10px;\n    padding-bottom: 0;\n    display: flex;\n    justify-content: space-between;\n    background-color: #f3f3f3;\n    border-radius: 5px 5px 0 0;\n\n    .editorjs-code-language-select {\n      position: relative;\n\n      & * {\n        font-size: 12px;\n        font-family: Arial, Helvetica, sans-serif;\n      }\n\n      select {\n        display: none;\n      }\n\n      .select-selected {\n        background-color: transparent;\n        padding: 5px 20px 5px 10px;\n        transition: background-color 0.2s;\n        width: fit-content;\n        border-radius: 5px;\n        cursor: pointer;\n        position: relative;\n\n        &:hover {\n          background-color: rgba($color: #000000, $alpha: 0.5);\n        }\n\n        .arrow-icon {\n          position: absolute;\n          width: 10px;\n          height: 10px;\n          right: 5px;\n          top: 6px;\n          transition: transform 0.2s;\n        }\n\n        &.select-arrow-active {\n          .arrow-icon {\n            transform: rotateZ(180deg);\n          }\n        }\n      }\n\n      .select-items {\n        padding: 5px;\n        height: auto;\n        background-color: #292929;\n        width: fit-content;\n        border-radius: 5px;\n        margin-top: 5px;\n        position: absolute;\n        z-index: 5;\n\n        .search-input {\n          margin: 5px;\n          padding: 5px;\n          background-color: lighten($color: #292929, $amount: 20%);\n          border: 0;\n          outline: 0;\n          border-radius: 2px;\n          color: white;\n        }\n\n        .items-list {\n          max-height: 300px;\n          overflow-y: auto;\n\n          div {\n            color: white;\n            cursor: pointer;\n            padding: 5px 10px 5px 10px;\n            margin: 5px 0 5px 0;\n            border-radius: 5px;\n            background-color: #292929;\n            transition: background-color 0.2s;\n          }\n\n          .same-as-selected,\n          div:hover {\n            background-color: lighten(#292929, 10%);\n          }\n        }\n      }\n\n      .select-hide {\n        display: none;\n      }\n    }\n\n    .language {\n      font-size: 12px;\n      font-family: Arial, Helvetica, sans-serif;\n      margin: 5px;\n    }\n\n    .btn-div {\n      .control-btn {\n        padding: 5px 10px 5px 10px;\n        border: 1px solid black;\n        cursor: pointer;\n        font-size: 12px;\n\n        &:hover {\n          background-color: rgba(46, 46, 46, 0.2);\n        }\n      }\n\n      .copy-btn {\n        border-radius: 5px 0 0 5px;\n\n        .copy-icon {\n          width: 10px;\n          height: 10px;\n        }\n\n        &.copy-btn-only {\n          border-radius: 5px;\n        }\n      }\n\n      .caption-btn {\n        border-radius: 0 5px 5px 0;\n        border-left: 0;\n      }\n    }\n  }\n\n  .content-container {\n    position: relative;\n    background-color: #f3f3f3;\n    border-radius: 0 0 5px 5px;\n\n    .rendered-layer {\n      position: absolute;\n      z-index: 0;\n      top: 0;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      border: 0;\n\n      pre {\n        margin: 0;\n        white-space: pre-wrap;\n        word-wrap: break-word;\n\n        code {\n          font-size: 14px;\n          padding: 20px;\n          padding-top: 5px;\n          border-radius: 5px 5px 0 0;\n          line-height: 2;\n        }\n      }\n    }\n\n    .input-layer {\n      position: relative;\n      z-index: 1;\n\n      color: transparent;\n      background: transparent;\n      caret-color: black;\n      border: 0;\n\n      padding: 20px;\n      padding-top: 5px;\n\n      width: 100%;\n\n      resize: none;\n      overflow: hidden;\n      min-height: 150px;\n\n      outline: 0;\n\n      &::selection {\n        background-color: rgba(212, 236, 255, 0.5);\n      }\n\n      &::-moz-selection {\n        background-color: rgba(212, 236, 255, 0.5);\n      }\n    }\n\n    .input-layer,\n    .rendered-layer,\n    .rendered-layer * {\n      font-size: 14px;\n      font-family: monospace;\n      tab-size: 2;\n      line-height: 2;\n    }\n  }\n\n  .caption-input {\n    border: 0;\n    outline: 0;\n    margin-top: 5px;\n    width: 100%;\n    color: gray;\n    background-color: transparent;\n  }\n}\n"],sourceRoot:""}]);const i=r},3645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",a=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),a&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),a&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,a,l,o){"string"==typeof e&&(e=[[null,e,void 0]]);var r={};if(a)for(var i=0;i<this.length;i++){var c=this[i][0];null!=c&&(r[c]=!0)}for(var s=0;s<e.length;s++){var u=[].concat(e[s]);a&&r[u[0]]||(void 0!==o&&(void 0===u[5]||(u[1]="@layer".concat(u[5].length>0?" ".concat(u[5]):""," {").concat(u[1],"}")),u[5]=o),n&&(u[2]?(u[1]="@media ".concat(u[2]," {").concat(u[1],"}"),u[2]=n):u[2]=n),l&&(u[4]?(u[1]="@supports (".concat(u[4],") {").concat(u[1],"}"),u[4]=l):u[4]="".concat(l)),t.push(u))}},t}},7537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var a=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),l="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(a),o="/*# ".concat(l," */");return[t].concat([o]).join("\n")}return[t].join("\n")}},3379:e=>{var t=[];function n(e){for(var n=-1,a=0;a<t.length;a++)if(t[a].identifier===e){n=a;break}return n}function a(e,a){for(var o={},r=[],i=0;i<e.length;i++){var c=e[i],s=a.base?c[0]+a.base:c[0],u=o[s]||0,d="".concat(s," ").concat(u);o[s]=u+1;var p=n(d),A={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)t[p].references++,t[p].updater(A);else{var b=l(A,a);a.byIndex=i,t.splice(i,0,{identifier:d,updater:b,references:1})}r.push(d)}return r}function l(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,l){var o=a(e=e||[],l=l||{});return function(e){e=e||[];for(var r=0;r<o.length;r++){var i=n(o[r]);t[i].references--}for(var c=a(e,l),s=0;s<o.length;s++){var u=n(o[s]);0===t[u].references&&(t[u].updater(),t.splice(u,1))}o=c}}},569:e=>{var t={};e.exports=function(e,n){var a=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(n)}},9216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},3565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},7795:e=>{e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var a="";n.supports&&(a+="@supports (".concat(n.supports,") {")),n.media&&(a+="@media ".concat(n.media," {"));var l=void 0!==n.layer;l&&(a+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),a+=n.css,l&&(a+="}"),n.media&&(a+="}"),n.supports&&(a+="}");var o=n.sourceMap;o&&"undefined"!=typeof btoa&&(a+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),t.styleTagTransform(a,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},4589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},a={};function l(e){var t=a[e];if(void 0!==t)return t.exports;var o=a[e]={id:e,exports:{}};return n[e](o,o.exports,l),o.exports}l.m=n,l.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return l.d(t,{a:t}),t},l.d=(e,t)=>{for(var n in t)l.o(t,n)&&!l.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},l.f={},l.e=e=>Promise.all(Object.keys(l.f).reduce(((t,n)=>(l.f[n](e,t),t)),[])),l.u=e=>e+".bundle.js",l.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),l.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),e={},t="CodeTool:",l.l=(n,a,o,r)=>{if(e[n])e[n].push(a);else{var i,c;if(void 0!==o)for(var s=document.getElementsByTagName("script"),u=0;u<s.length;u++){var d=s[u];if(d.getAttribute("src")==n||d.getAttribute("data-webpack")==t+o){i=d;break}}i||(c=!0,(i=document.createElement("script")).charset="utf-8",i.timeout=120,l.nc&&i.setAttribute("nonce",l.nc),i.setAttribute("data-webpack",t+o),i.src=n),e[n]=[a];var p=(t,a)=>{i.onerror=i.onload=null,clearTimeout(A);var l=e[n];if(delete e[n],i.parentNode&&i.parentNode.removeChild(i),l&&l.forEach((e=>e(a))),t)return t(a)},A=setTimeout(p.bind(null,void 0,{type:"timeout",target:i}),12e4);i.onerror=p.bind(null,i.onerror),i.onload=p.bind(null,i.onload),c&&document.head.appendChild(i)}},l.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{var e;l.g.importScripts&&(e=l.g.location+"");var t=l.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var n=t.getElementsByTagName("script");n.length&&(e=n[n.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),l.p=e})(),(()=>{var e={179:0};l.f.j=(t,n)=>{var a=l.o(e,t)?e[t]:void 0;if(0!==a)if(a)n.push(a[2]);else{var o=new Promise(((n,l)=>a=e[t]=[n,l]));n.push(a[2]=o);var r=l.p+l.u(t),i=new Error;l.l(r,(n=>{if(l.o(e,t)&&(0!==(a=e[t])&&(e[t]=void 0),a)){var o=n&&("load"===n.type?"missing":n.type),r=n&&n.target&&n.target.src;i.message="Loading chunk "+t+" failed.\n("+o+": "+r+")",i.name="ChunkLoadError",i.type=o,i.request=r,a[1](i)}}),"chunk-"+t,t)}};var t=(t,n)=>{var a,o,[r,i,c]=n,s=0;if(r.some((t=>0!==e[t]))){for(a in i)l.o(i,a)&&(l.m[a]=i[a]);c&&c(l)}for(t&&t(n);s<r.length;s++)o=r[s],l.o(e,o)&&e[o]&&e[o][0](),e[o]=0},n=self.webpackChunkCodeTool=self.webpackChunkCodeTool||[];n.forEach(t.bind(null,0)),n.push=t.bind(null,n.push.bind(n))})(),l.nc=void 0;var o={};return(()=>{l.d(o,{default:()=>w});var e=l(3379),t=l.n(e),n=l(7795),a=l.n(n),r=l(569),i=l.n(r),c=l(3565),s=l.n(c),u=l(9216),d=l.n(u),p=l(4589),A=l.n(p),b=l(7192),v={};function f(e,t,n){var a;if(!document)throw new Error("No document instance found!");var l=document.createElement(e);if(t&&(Array.isArray(t)?(a=l.classList).add.apply(a,t):l.classList.add(t)),n)for(var o=0,r=Object.keys(n);o<r.length;o++){var i=r[o];l.setAttribute(i,n[i])}return l}function h(e){for(var t=document.querySelectorAll(".editorjs-code-language-select .select-items"),n=document.querySelectorAll(".editorjs-code-language-select .select-selected"),a=[],l=0;l<n.length;++l)e===n[l]?a.push(l):n[l].classList.remove("select-arrow-active");for(l=0;l<t.length;++l)a.indexOf(l)&&t[l].classList.add("select-hide")}v.styleTagTransform=A(),v.setAttributes=s(),v.insert=i().bind(null,"head"),v.domAPI=a(),v.insertStyleElement=d(),t()(b.Z,v),b.Z&&b.Z.locals&&b.Z.locals,document.addEventListener("click",(function(){h()}));var g=function(e){return t=void 0,n=void 0,l=function(){var t,n,a;return function(e,t){var n,a,l,o,r={label:0,sent:function(){if(1&l[0])throw l[1];return l[1]},trys:[],ops:[]};return o={next:i(0),throw:i(1),return:i(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function i(i){return function(c){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;o&&(o=0,i[0]&&(r=0)),r;)try{if(n=1,a&&(l=2&i[0]?a.return:i[0]?a.throw||((l=a.return)&&l.call(a),0):a.next)&&!(l=l.call(a,i[1])).done)return l;switch(a=0,l&&(i=[2&i[0],l.value]),i[0]){case 0:case 1:l=i;break;case 4:return r.label++,{value:i[1],done:!1};case 5:r.label++,a=i[1],i=[0];continue;case 7:i=r.ops.pop(),r.trys.pop();continue;default:if(!((l=(l=r.trys).length>0&&l[l.length-1])||6!==i[0]&&2!==i[0])){r=0;continue}if(3===i[0]&&(!l||i[1]>l[0]&&i[1]<l[3])){r.label=i[1];break}if(6===i[0]&&r.label<l[1]){r.label=l[1],l=i;break}if(l&&r.label<l[2]){r.label=l[2],r.ops.push(i);break}l[2]&&r.ops.pop(),r.trys.pop();continue}i=t.call(e,r)}catch(e){i=[6,e],a=0}finally{n=l=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,c])}}}(this,(function(l){switch(l.label){case 0:if(!document)throw new Error("Trying to access document from node environment");if(!navigator.clipboard){(t=document.createElement("textarea")).value=e,t.style.top="0",t.style.left="0",t.style.position="fixed",document.body.appendChild(t),t.focus(),t.select();try{return n=document.execCommand("copy"),a=n?"successful":"unsuccessful",console.log("Fallback: Copying text command was "+a),[2,n]}catch(e){console.error("Unable to copy",e)}return[2,!1]}return[4,navigator.clipboard.writeText(e).then((function(){return!0})).catch((function(e){return console.error("Async: unable to copy",e),!1}))];case 1:return[2,l.sent()]}}))},new((a=void 0)||(a=Promise))((function(e,o){function r(e){try{c(l.next(e))}catch(e){o(e)}}function i(e){try{c(l.throw(e))}catch(e){o(e)}}function c(t){var n;t.done?e(t.value):(n=t.value,n instanceof a?n:new a((function(e){e(n)}))).then(r,i)}c((l=l.apply(t,n||[])).next())}));var t,n,a,l},C=[{label:"1C",value:"1c"},{label:"4D",value:"4d"},{label:"ABAP",value:"sap-abap"},{label:"ABNF",value:"abnf"},{label:"Access logs",value:"accesslog"},{label:"Ada",value:"ada"},{label:"Apex",value:"apex"},{label:"Arduino",value:"arduino"},{label:"ARM assembler",value:"armasm"},{label:"AVR assembler",value:"avrasm"},{label:"ActionScript",value:"actionscript"},{label:"Alan IF",value:"alan"},{label:"Alan",value:"ln"},{label:"AngelScript",value:"angelscript"},{label:"Apache",value:"apache"},{label:"AppleScript",value:"applescript"},{label:"Arcade",value:"arcade"},{label:"AsciiDoc",value:"asciidoc"},{label:"AspectJ",value:"aspectj"},{label:"AutoHotkey",value:"autohotkey"},{label:"AutoIt",value:"autoit"},{label:"Awk",value:"awk"},{label:"Bash",value:"bash"},{label:"Basic",value:"basic"},{label:"BBCode",value:"bbcode"},{label:"Blade (Laravel)",value:"blade"},{label:"BNF",value:"bnf"},{label:"Brainfuck",value:"brainfuck"},{label:"C#",value:"csharp"},{label:"C",value:"c"},{label:"C++",value:"cpp"},{label:"C/AL",value:"cal"},{label:"Cache Object Script",value:"cos"},{label:"CMake",value:"cmake"},{label:"COBOL",value:"cobol"},{label:"Coq",value:"coq"},{label:"CSP",value:"csp"},{label:"CSS",value:"css"},{label:"Cap’n Proto",value:"capnproto"},{label:"Chaos",value:"chaos"},{label:"Chapel",value:"chapel"},{label:"Cisco CLI",value:"cisco"},{label:"Clojure",value:"clojure"},{label:"CoffeeScript",value:"coffeescript"},{label:"CpcdosC+",value:"cpc"},{label:"Crmsh",value:"crmsh"},{label:"Crystal",value:"crystal"},{label:"cURL",value:"curl"},{label:"Cypher (Neo4j)",value:"cypher"},{label:"D",value:"d"},{label:"Dafny",value:"dafny"},{label:"Dart",value:"dart"},{label:"Delphi",value:"dpr"},{label:"Diff",value:"diff"},{label:"Django",value:"django"},{label:"DNS Zone file",value:"dns"},{label:"Dockerfile",value:"dockerfile"},{label:"DOS",value:"dos"},{label:"dsconfig",value:"dsconfig"},{label:"DTS (Device Tree)",value:"dts"},{label:"Dust",value:"dust"},{label:"Dylan",value:"dylan"},{label:"EBNF",value:"ebnf"},{label:"Elixir",value:"elixir"},{label:"Elm",value:"elm"},{label:"Erlang",value:"erlang"},{label:"Excel",value:"excel"},{label:"Extempore",value:"extempore"},{label:"F#",value:"fsharp"},{label:"FIX",value:"fix"},{label:"Flix",value:"flix"},{label:"Fortran",value:"fortran"},{label:"FunC",value:"func"},{label:"G-Code",value:"gcode"},{label:"Gams",value:"gams"},{label:"GAUSS",value:"gauss"},{label:"GDScript",value:"godot"},{label:"Gherkin",value:"gherkin"},{label:"Glimmer and EmberJS",value:"hbs"},{label:"GN for Ninja",value:"gn"},{label:"Go",value:"go"},{label:"Grammatical Framework",value:"gf"},{label:"Golo",value:"golo"},{label:"Gradle",value:"gradle"},{label:"GraphQL",value:"graphql"},{label:"Groovy",value:"groovy"},{label:"GSQL",value:"gsql"},{label:"HTML, XML",value:"xml"},{label:"HTTP",value:"http"},{label:"Haml",value:"haml"},{label:"Handlebars",value:"handlebars"},{label:"Haskell",value:"haskell"},{label:"Haxe",value:"haxe"},{label:"High-level shader language",value:"hlsl"},{label:"Hy",value:"hy"},{label:"Ini, TOML",value:"ini"},{label:"Inform7",value:"inform7"},{label:"IRPF90",value:"irpf90"},{label:"JSON",value:"json"},{label:"Java",value:"java"},{label:"JavaScript",value:"javascript"},{label:"Jolie",value:"jolie"},{label:"Julia",value:"julia"},{label:"Kotlin",value:"kotlin"},{label:"LaTeX",value:"tex"},{label:"Leaf",value:"leaf"},{label:"Lean",value:"lean"},{label:"Lasso",value:"lasso"},{label:"Less",value:"less"},{label:"LDIF",value:"ldif"},{label:"Lisp",value:"lisp"},{label:"LiveCode Server",value:"livecodeserver"},{label:"LiveScript",value:"livescript"},{label:"LookML",value:"lookml"},{label:"Lua",value:"lua"},{label:"Macaulay2",value:"macaulay2"},{label:"Makefile",value:"makefile"},{label:"Markdown",value:"markdown"},{label:"Mathematica",value:"mathematica"},{label:"Matlab",value:"matlab"},{label:"Maxima",value:"maxima"},{label:"Maya Embedded Language",value:"mel"},{label:"Mercury",value:"mercury"},{label:"mIRC Scripting Language",value:"mirc"},{label:"Mizar",value:"mizar"},{label:"MKB",value:"mkb"},{label:"MLIR",value:"mlir"},{label:"Mojolicious",value:"mojolicious"},{label:"Monkey",value:"monkey"},{label:"Moonscript",value:"moonscript"},{label:"N1QL",value:"n1ql"},{label:"NSIS",value:"nsis"},{label:"Never",value:"never"},{label:"Nginx",value:"nginx"},{label:"Nim",value:"nim"},{label:"Nix",value:"nix"},{label:"Oak",value:"oak"},{label:"Object Constraint Language",value:"ocl"},{label:"OCaml",value:"ocaml"},{label:"Objective C",value:"objectivec"},{label:"OpenGL Shading Language",value:"glsl"},{label:"OpenSCAD",value:"openscad"},{label:"Oracle Rules Language",value:"ruleslanguage"},{label:"Oxygene",value:"oxygene"},{label:"PF",value:"pf"},{label:"PHP",value:"php"},{label:"Papyrus",value:"papyrus"},{label:"Parser3",value:"parser3"},{label:"Perl",value:"perl"},{label:"Pine Script",value:"pine"},{label:"Plaintext",value:"plaintext"},{label:"Pony",value:"pony"},{label:"PostgreSQL & PL/pgSQL",value:"pgsql"},{label:"PowerShell",value:"powershell"},{label:"Processing",value:"processing"},{label:"Prolog",value:"prolog"},{label:"Properties",value:"properties"},{label:"Protocol Buffers",value:"protobuf"},{label:"Puppet",value:"puppet"},{label:"Python",value:"python"},{label:"Python profiler results",value:"profile"},{label:"Python REPL",value:"python-repl"},{label:"Q#",value:"qsharp"},{label:"Q",value:"k"},{label:"QML",value:"qml"},{label:"R",value:"r"},{label:"Razor CSHTML",value:"cshtml"},{label:"ReasonML",value:"reasonml"},{label:"Rebol & Red",value:"redbol"},{label:"RenderMan RIB",value:"rib"},{label:"RenderMan RSL",value:"rsl"},{label:"RiScript",value:"risc"},{label:"Roboconf",value:"graph"},{label:"Robot Framework",value:"robot"},{label:"RPM spec files",value:"rpm-specfile"},{label:"Ruby",value:"ruby"},{label:"Rust",value:"rust"},{label:"RVT Script",value:"rvt"},{label:"SAS",value:"SAS"},{label:"SCSS",value:"scss"},{label:"SQL",value:"sql"},{label:"STEP Part 21",value:"p21"},{label:"Scala",value:"scala"},{label:"Scheme",value:"scheme"},{label:"Scilab",value:"scilab"},{label:"Shape Expressions",value:"shexc"},{label:"Shell",value:"shell"},{label:"Smali",value:"smali"},{label:"Smalltalk",value:"smalltalk"},{label:"SML",value:"sml"},{label:"Solidity",value:"solidity"},{label:"Splunk SPL",value:"spl"},{label:"Stan",value:"stan"},{label:"Stata",value:"stata"},{label:"Structured Text",value:"iecst"},{label:"Stylus",value:"stylus"},{label:"SubUnit",value:"subunit"},{label:"Supercollider",value:"supercollider"},{label:"Svelte",value:"svelte"},{label:"Swift",value:"swift"},{label:"Tcl",value:"tcl"},{label:"Terraform (HCL)",value:"terraform"},{label:"Test Anything Protocol",value:"tap"},{label:"Thrift",value:"thrift"},{label:"Toit",value:"toit"},{label:"TP",value:"tp"},{label:"Transact-SQL",value:"tsql"},{label:"Twig",value:"twig"},{label:"TypeScript",value:"typescript"},{label:"Unicorn Rails log",value:"unicorn-rails-log"},{label:"VB.Net",value:"vbnet"},{label:"VBA",value:"vba"},{label:"VBScript",value:"vbscript"},{label:"VHDL",value:"vhdl"},{label:"Vala",value:"vala"},{label:"Verilog",value:"verilog"},{label:"Vim Script",value:"vim"},{label:"X#",value:"xsharp"},{label:"X++",value:"axapta"},{label:"x86 Assembly",value:"x86asm"},{label:"XL",value:"xl"},{label:"XQuery",value:"xquery"},{label:"YAML",value:"yml"},{label:"ZenScript",value:"zenscript"},{label:"Zephir",value:"zephir"}],m=function(e,t,n,a){return new(n||(n=Promise))((function(l,o){function r(e){try{c(a.next(e))}catch(e){o(e)}}function i(e){try{c(a.throw(e))}catch(e){o(e)}}function c(e){var t;e.done?l(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(r,i)}c((a=a.apply(e,t||[])).next())}))},y=function(e,t){var n,a,l,o,r={label:0,sent:function(){if(1&l[0])throw l[1];return l[1]},trys:[],ops:[]};return o={next:i(0),throw:i(1),return:i(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function i(i){return function(c){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;o&&(o=0,i[0]&&(r=0)),r;)try{if(n=1,a&&(l=2&i[0]?a.return:i[0]?a.throw||((l=a.return)&&l.call(a),0):a.next)&&!(l=l.call(a,i[1])).done)return l;switch(a=0,l&&(i=[2&i[0],l.value]),i[0]){case 0:case 1:l=i;break;case 4:return r.label++,{value:i[1],done:!1};case 5:r.label++,a=i[1],i=[0];continue;case 7:i=r.ops.pop(),r.trys.pop();continue;default:if(!((l=(l=r.trys).length>0&&l[l.length-1])||6!==i[0]&&2!==i[0])){r=0;continue}if(3===i[0]&&(!l||i[1]>l[0]&&i[1]<l[3])){r.label=i[1];break}if(6===i[0]&&r.label<l[1]){r.label=l[1],l=i;break}if(l&&r.label<l[2]){r.label=l[2],r.ops.push(i);break}l[2]&&r.ops.pop(),r.trys.pop();continue}i=t.call(e,r)}catch(e){i=[6,e],a=0}finally{n=l=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,c])}}},x=function(){function e(e){var t=e.data,n=e.config,a=e.api,l=e.readOnly;if(this.inputRef=null,this.codeRef=null,this.containerRef=null,this.captionInputRef=null,this.supportedLanguages=[],this.currentSelectedLanguage="",this.copiedContent=!1,this.useCaption=!1,this.data=null,this.configs={allowValidation:!0},this.api=null,this.readOnly=!1,this.buildSupportedLanguages(n.supportedLanguages),n&&!l)if(this.configs=Object.assign(this.configs,n),n.defaultLanguage){if(-1===this.supportedLanguages.findIndex((function(e){return e.value===n.defaultLanguage})))throw new Error("The default language you provided is not existed in the given supported languages. More detail about supported languages from highlight.js: https://github.com/highlightjs/highlight.js/blob/main/SUPPORTED_LANGUAGES.md");this.currentSelectedLanguage=n.defaultLanguage}else this.currentSelectedLanguage=this.supportedLanguages[0].value;this.isDataValid(t)&&(this.data=t,this.currentSelectedLanguage=t.language),a&&(this.api=a),this.readOnly=Boolean(l)}return Object.defineProperty(e,"isReadOnlySupported",{get:function(){return!0},enumerable:!1,configurable:!0}),Object.defineProperty(e,"toolbox",{get:function(){return{title:"Code",icon:'<svg xmlns="http://www.w3.org/2000/svg" width="15" height="15" viewBox="0 0 640 512">\x3c!--! Font Awesome Pro 6.2.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2022 Fonticons, Inc. --\x3e<path d="M392.8 1.2c-17-4.9-34.7 5-39.6 22l-128 448c-4.9 17 5 34.7 22 39.6s34.7-5 39.6-22l128-448c4.9-17-5-34.7-22-39.6zm80.6 120.1c-12.5 12.5-12.5 32.8 0 45.3L562.7 256l-89.4 89.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l112-112c12.5-12.5 12.5-32.8 0-45.3l-112-112c-12.5-12.5-32.8-12.5-45.3 0zm-306.7 0c-12.5-12.5-32.8-12.5-45.3 0l-112 112c-12.5 12.5-12.5 32.8 0 45.3l112 112c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L77.3 256l89.4-89.4c12.5-12.5 12.5-32.8 0-45.3z"/></svg>'}},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"allowValidation",{get:function(){return this.configs.allowValidation},enumerable:!1,configurable:!0}),e.prototype.isDataValid=function(e){return"object"==typeof e&&"language"in e&&"code"in e&&"caption"in e&&"string"==typeof e.language&&"string"==typeof e.caption&&"string"==typeof e.code},e.prototype.buildSupportedLanguages=function(e){for(var t,n=Boolean(e),a=function(a){t=n&&null!=(t=e.find((function(e){return e.value===a.value})))?t:a,l.supportedLanguages.push(t)},l=this,o=0,r=C;o<r.length;o++)a(r[o])},e.prototype.render=function(){var e=this,t=f("div","editorjs-code-block"),n=f("div","control-container");if(this.readOnly){var a=f("span","language"),l=this.supportedLanguages.find((function(t){return t.value===e.currentSelectedLanguage}));a.innerHTML=l?l.label:"",n.appendChild(a)}else{var o=function(e,t){if(0!==e.length){var n,a,l,o,r,i,c,s,u,d,p,A=["editorjs-code-language-select"],b={};t&&(t.classNames&&(Array.isArray(t.classNames)?A.push.apply(A,t.classNames):A.push(t.classNames)),t.attributes&&(b=Object.assign(b,t.attributes)));var v=function(e,n){if(!u||!a||!o)throw new Error("Element not found");if(!n){a.replaceChildren(),u.replaceChildren();for(var i=0,c=e;i<c.length;i++){var s=c[i];(l=f("option")).value=s.value,l.innerText=s.label,a.appendChild(l)}}for(var A=0;A<e.length;++A)(d=f("div",void 0,{"data-value":e[A].value})).innerHTML=a.options[A].innerHTML,e[A].value===p?d.setAttribute("class","same-as-selected"):d.removeAttribute("class"),d.addEventListener("click",(function(e){var n=e.target,a=n.dataset.value;p=a,o.innerHTML=n.innerHTML,o.appendChild(r);for(var l=u.getElementsByClassName("same-as-selected"),i=0;i<l.length;++i)l[i].removeAttribute("class");n.setAttribute("class","same-as-selected"),o.click(),t&&t.onSelect&&t.onSelect(a)})),u.appendChild(d)};n=f("div",A,b),a=f("select");for(var g=0,C=e;g<C.length;g++){var m=C[g];(l=f("option")).value=m.value,l.innerText=m.label,a.appendChild(l)}return(o=f("div","select-selected")).innerHTML=t&&t.defaultOption?e.find((function(e){return e.value===t.defaultOption})).label:e[0].label,(r=document.createElementNS("http://www.w3.org/2000/svg","svg")).setAttribute("viewBox","0 0 448 512"),r.classList.add("arrow-icon"),(i=document.createElementNS("http://www.w3.org/2000/svg","path")).setAttribute("d","M201.4 374.6c12.5 12.5 32.8 12.5 45.3 0l160-160c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L224 306.7 86.6 169.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3l160 160z"),r.appendChild(i),o.appendChild(r),n.appendChild(o),c=f("div",["select-items","select-hide"]),(s=f("input","search-input",{placeholder:"Search"})).onclick=function(e){e.stopPropagation()},s.oninput=function(t){var n=t.target.value,a=""!==n.trim()?e.filter((function(e){return e.label.toLowerCase().includes(n.toLowerCase())})):e;v(a),t.stopPropagation()},c.appendChild(s),u=f("div","items-list"),p=t&&t.defaultOption?t.defaultOption:e[0].value,v(e,!0),c.appendChild(u),n.appendChild(c),o.addEventListener("click",(function(t){var n=t.target;h(o),t.stopPropagation(),c.classList.toggle("select-hide"),n.classList.toggle("select-arrow-active"),""!==s.value.trim()&&v(e),s.value=""})),n}}(this.supportedLanguages,{defaultOption:this.currentSelectedLanguage,onSelect:this.onSelectLanguage.bind(this)});n.appendChild(o)}var r=f("div","btn-div"),i=f("button",["control-btn","copy-btn"]);this.readOnly&&i.classList.add("copy-btn-only");var c=this.api?this.api.i18n.t("Copy"):"Copy";if(i.innerHTML='\n    <svg class="copy-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512">\x3c!--! Font Awesome Pro 6.2.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2022 Fonticons, Inc. --\x3e<path d="M0 448c0 35.3 28.7 64 64 64H288c35.3 0 64-28.7 64-64V384H224c-53 0-96-43-96-96V160H64c-35.3 0-64 28.7-64 64V448zm224-96H448c35.3 0 64-28.7 64-64V64c0-35.3-28.7-64-64-64H224c-35.3 0-64 28.7-64 64V288c0 35.3 28.7 64 64 64z"/></svg>\n    '.concat(c,"\n    "),i.onclick=this.onCopyContent.bind(this),r.appendChild(i),!this.readOnly){var s=f("button",["control-btn","caption-btn"]);s.innerText=this.api?this.api.i18n.t("Caption"):"Caption",s.onclick=this.onAddCaption.bind(this),r.appendChild(s)}n.appendChild(r),t.appendChild(n);var u=f("div","content-container"),d=f("div","rendered-layer"),p=f("pre",void 0,{"aria-hidden":"true"}),A=f("code","language-".concat(this.currentSelectedLanguage));p.appendChild(A),d.appendChild(p);var b=f("textarea","input-layer",{placeholder:this.api?this.api.i18n.t("Enter your code"):"Enter your code"});return b.disabled=this.readOnly,b.spellcheck=!1,u.appendChild(d),u.appendChild(b),t.appendChild(u),this.inputRef=b,this.codeRef=A,this.containerRef=t,this.data&&(this.inputRef.value=this.data.code,setTimeout((function(){e.updateContent(e.data.code)}),500),this.data.caption&&""!==this.data.caption.trim()&&this.addCaption(this.data.caption)),this.inputRef.oninput=this.onContentUpdated.bind(this),this.inputRef.onkeydown=this.onInputAreaKeyDown.bind(this),t},e.prototype.save=function(){if(!this.inputRef)throw new Error("No ref found! You may forgot to call render()");return{language:this.currentSelectedLanguage,code:this.inputRef.value,caption:this.captionInputRef?this.captionInputRef.value:""}},e.prototype.validate=function(e){return!this.allowValidation||""!==e.code.trim()},e.prototype.onContentUpdated=function(e){var t=e.target.value;this.updateContent(t)},e.prototype.onInputAreaKeyDown=function(e){if("Enter"===e.key)e.stopPropagation();else if("Tab"===e.key){e.preventDefault();var t=e.target,n=t.value,a=n.slice(0,t.selectionStart),l=n.slice(t.selectionEnd,n.length),o=t.selectionEnd+1;t.value=a+"\t"+l,t.selectionStart=o,t.selectionEnd=o,this.updateContent(t.value),e.stopPropagation()}},e.prototype.onSelectLanguage=function(e){if(!this.codeRef||!this.inputRef)throw new Error("No ref found! You may forgot to call render()");this.codeRef.classList.replace("language-".concat(this.currentSelectedLanguage),"language-".concat(e)),this.currentSelectedLanguage=e,this.updateContent(this.inputRef.value)},e.prototype.onCopyContent=function(e){return m(this,void 0,void 0,(function(){var t,n,a=this;return y(this,(function(l){switch(l.label){case 0:if(!this.inputRef)throw new Error("No ref found! You may forgot to call render()");return t=e.target,n=this.inputRef.value,[4,g(n)];case 1:return l.sent()&&(t.innerHTML='\n        <svg class="copy-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512">\x3c!--! Font Awesome Pro 6.2.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2022 Fonticons, Inc. --\x3e<path d="M470.6 105.4c12.5 12.5 12.5 32.8 0 45.3l-256 256c-12.5 12.5-32.8 12.5-45.3 0l-128-128c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0L192 338.7 425.4 105.4c12.5-12.5 32.8-12.5 45.3 0z"/></svg>\n        '.concat(this.api?this.api.i18n.t("Copied"):"Copied","\n        "),this.copiedContent||(setTimeout((function(){t.innerHTML='\n                <svg class="copy-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512">\x3c!--! Font Awesome Pro 6.2.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2022 Fonticons, Inc. --\x3e<path d="M0 448c0 35.3 28.7 64 64 64H288c35.3 0 64-28.7 64-64V384H224c-53 0-96-43-96-96V160H64c-35.3 0-64 28.7-64 64V448zm224-96H448c35.3 0 64-28.7 64-64V64c0-35.3-28.7-64-64-64H224c-35.3 0-64 28.7-64 64V288c0 35.3 28.7 64 64 64z"/></svg>\n                '.concat(a.api?a.api.i18n.t("Copy"):"Copy","\n                "),a.copiedContent=!1}),1e3),this.copiedContent=!0,this.configs.onContentCopied&&"function"==typeof this.configs.onContentCopied&&this.configs.onContentCopied(n))),[2]}}))}))},e.prototype.onAddCaption=function(){if(!this.containerRef)throw new Error("No ref found! You may forgot to call render()");this.addCaption()},e.prototype.onCaptionKeyDown=function(e){if(!this.captionInputRef)throw new Error("No ref found!");"Backspace"===e.key&&""===e.target.value&&(this.containerRef.removeChild(this.captionInputRef),this.useCaption=!1)},e.prototype.addCaption=function(e){if(void 0===e&&(e=""),!this.useCaption){var t=f("textarea","caption-input",{placeholder:this.api?this.api.i18n.t("Write your caption"):"Write your caption"});t.disabled=this.readOnly,t.onkeydown=this.onCaptionKeyDown.bind(this),this.containerRef.appendChild(t),this.captionInputRef=t,t.focus(),this.useCaption=!0}this.captionInputRef.value=e},e.prototype.updateContent=function(e){return m(this,void 0,void 0,(function(){return y(this,(function(t){switch(t.label){case 0:if(!this.codeRef||!this.inputRef)throw new Error("No reference found! You may forgot to call render()");return"\n"==e[e.length-1]&&(e+=" "),this.codeRef.innerHTML=e.replace(new RegExp("&","g"),"&amp;").replace(new RegExp("<","g"),"&lt;"),[4,l.e(637).then(l.bind(l,637))];case 1:return t.sent().default.highlightElement(this.codeRef),this.inputRef.style.height="5px",this.inputRef.style.height=this.inputRef.scrollHeight+"px",[2]}}))}))},e}();const w=x})(),o.default})()));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,